name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cargo
        ports:
          - 5433:5432
        options: > 
          --health-cmd="pg_isready -U postgres -d cargo" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker images
      run: docker-compose build

    - name: Start database
      run: docker-compose up -d db

    - name: Wait for Postgres to be ready
      run: |
        echo "Waiting for Postgres..."
        until docker exec db pg_isready -U postgres; do
          sleep 1
        done

    - name: Initialize the database
      run: |
        docker exec -i db psql -U postgres -d cargo < ./init.sql

    - name: Start application containers
      run: docker-compose up -d app

    - name: Run tests
      run: |
        sleep 15  # Optional, um sicherzustellen, dass alles bereit ist
        docker exec app npm test

    - name: Stop and remove containers
      run: docker-compose down
